// Generated by view binder compiler. Do not edit!
package com.example.crytoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crytoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout AllDetail;

  @NonNull
  public final ImageButton addWatchlistButton;

  @NonNull
  public final ImageButton backStackButton;

  @NonNull
  public final AppCompatButton button;

  @NonNull
  public final AppCompatButton button1;

  @NonNull
  public final AppCompatButton button2;

  @NonNull
  public final AppCompatButton button3;

  @NonNull
  public final AppCompatButton button4;

  @NonNull
  public final AppCompatButton button5;

  @NonNull
  public final ConstraintLayout detailAppbar;

  @NonNull
  public final ImageView detailChangeImageView;

  @NonNull
  public final TextView detailChangeTextView;

  @NonNull
  public final ConstraintLayout detailChart;

  @NonNull
  public final ImageView detailImageView;

  @NonNull
  public final ConstraintLayout detailPrice;

  @NonNull
  public final TextView detailPriceTextView;

  @NonNull
  public final RecyclerView detailRecyclerView;

  @NonNull
  public final TextView detailSymbolTextView;

  @NonNull
  public final WebView detaillChartWebView;

  @NonNull
  public final ConstraintLayout frameLayout2;

  private FragmentDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout AllDetail, @NonNull ImageButton addWatchlistButton,
      @NonNull ImageButton backStackButton, @NonNull AppCompatButton button,
      @NonNull AppCompatButton button1, @NonNull AppCompatButton button2,
      @NonNull AppCompatButton button3, @NonNull AppCompatButton button4,
      @NonNull AppCompatButton button5, @NonNull ConstraintLayout detailAppbar,
      @NonNull ImageView detailChangeImageView, @NonNull TextView detailChangeTextView,
      @NonNull ConstraintLayout detailChart, @NonNull ImageView detailImageView,
      @NonNull ConstraintLayout detailPrice, @NonNull TextView detailPriceTextView,
      @NonNull RecyclerView detailRecyclerView, @NonNull TextView detailSymbolTextView,
      @NonNull WebView detaillChartWebView, @NonNull ConstraintLayout frameLayout2) {
    this.rootView = rootView;
    this.AllDetail = AllDetail;
    this.addWatchlistButton = addWatchlistButton;
    this.backStackButton = backStackButton;
    this.button = button;
    this.button1 = button1;
    this.button2 = button2;
    this.button3 = button3;
    this.button4 = button4;
    this.button5 = button5;
    this.detailAppbar = detailAppbar;
    this.detailChangeImageView = detailChangeImageView;
    this.detailChangeTextView = detailChangeTextView;
    this.detailChart = detailChart;
    this.detailImageView = detailImageView;
    this.detailPrice = detailPrice;
    this.detailPriceTextView = detailPriceTextView;
    this.detailRecyclerView = detailRecyclerView;
    this.detailSymbolTextView = detailSymbolTextView;
    this.detaillChartWebView = detaillChartWebView;
    this.frameLayout2 = frameLayout2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AllDetail;
      ConstraintLayout AllDetail = ViewBindings.findChildViewById(rootView, id);
      if (AllDetail == null) {
        break missingId;
      }

      id = R.id.addWatchlistButton;
      ImageButton addWatchlistButton = ViewBindings.findChildViewById(rootView, id);
      if (addWatchlistButton == null) {
        break missingId;
      }

      id = R.id.backStackButton;
      ImageButton backStackButton = ViewBindings.findChildViewById(rootView, id);
      if (backStackButton == null) {
        break missingId;
      }

      id = R.id.button;
      AppCompatButton button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.button1;
      AppCompatButton button1 = ViewBindings.findChildViewById(rootView, id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.button2;
      AppCompatButton button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button3;
      AppCompatButton button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.button4;
      AppCompatButton button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.button5;
      AppCompatButton button5 = ViewBindings.findChildViewById(rootView, id);
      if (button5 == null) {
        break missingId;
      }

      id = R.id.detailAppbar;
      ConstraintLayout detailAppbar = ViewBindings.findChildViewById(rootView, id);
      if (detailAppbar == null) {
        break missingId;
      }

      id = R.id.detailChangeImageView;
      ImageView detailChangeImageView = ViewBindings.findChildViewById(rootView, id);
      if (detailChangeImageView == null) {
        break missingId;
      }

      id = R.id.detailChangeTextView;
      TextView detailChangeTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailChangeTextView == null) {
        break missingId;
      }

      id = R.id.detailChart;
      ConstraintLayout detailChart = ViewBindings.findChildViewById(rootView, id);
      if (detailChart == null) {
        break missingId;
      }

      id = R.id.detailImageView;
      ImageView detailImageView = ViewBindings.findChildViewById(rootView, id);
      if (detailImageView == null) {
        break missingId;
      }

      id = R.id.detailPrice;
      ConstraintLayout detailPrice = ViewBindings.findChildViewById(rootView, id);
      if (detailPrice == null) {
        break missingId;
      }

      id = R.id.detailPriceTextView;
      TextView detailPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailPriceTextView == null) {
        break missingId;
      }

      id = R.id.detailRecyclerView;
      RecyclerView detailRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (detailRecyclerView == null) {
        break missingId;
      }

      id = R.id.detailSymbolTextView;
      TextView detailSymbolTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailSymbolTextView == null) {
        break missingId;
      }

      id = R.id.detaillChartWebView;
      WebView detaillChartWebView = ViewBindings.findChildViewById(rootView, id);
      if (detaillChartWebView == null) {
        break missingId;
      }

      ConstraintLayout frameLayout2 = (ConstraintLayout) rootView;

      return new FragmentDetailsBinding((ConstraintLayout) rootView, AllDetail, addWatchlistButton,
          backStackButton, button, button1, button2, button3, button4, button5, detailAppbar,
          detailChangeImageView, detailChangeTextView, detailChart, detailImageView, detailPrice,
          detailPriceTextView, detailRecyclerView, detailSymbolTextView, detaillChartWebView,
          frameLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
